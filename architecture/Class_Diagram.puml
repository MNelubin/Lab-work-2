@startuml
'#############################################
' Transfers
'#############################################

enum Rarity {
  Common
  Uncommon
  Rare
  Epic
}

enum ElementType {
  Fire
  Water
  Earth
  Air
}

enum TribeType {
  Beast
  Human
  Undead
  Dragon
}

'#############################################
' Basic classes
'#############################################

class Card {
  - Card_Name : String
  - description : String
  - rarity : Rarity
  - Mana_cost : int
  + Get_Card_Name() : String
  + Set_Card_Name(name: String)
  + Get_Description() : String
  + Set_Description(desc: String)
  + Get_Rarity() : Rarity
  + Set_Rarity(rarity: Rarity)
  + Get_Mana_Cost() : int
  + Set_Mana_Cost(cost: int)
}

class Spell_Card {
  - Element : ElementType
  + Get_Element() : ElementType
  + Set_Element(element: ElementType)
}

class Attack_Spell_Card {
  - Base_DMG : int
  + Get_Base_DMG() : int
  + Set_Base_DMG(dmg: int)
}

class Heal_Spell_Card {
  - Efficiency_deg : Float
  - Base_Heal : int
  + Get_Base_Heal() : int
  + Set_Base_Heal(heal: int)
  + Get_Efficiency() : Float
  + Set_Efficiency(eff: Float)
}

class Buff_Spell_Card {
  - Multiplier : Float
  + Get_Multiplier() : Float
  + Set_Multiplier(multiplier: Float)
}

class Defence_Spell_Card {
  - Base_DEF : int
  + Get_Base_DEF() : int
  + Set_Base_DEF(def: int)
}

class Beast_Card {
  - Base_DMG : int
  - Tribe : TribeType
  + Get_Base_DMG() : int
  + Set_Base_DMG(dmg: int)
  + Get_Tribe() : TribeType
  + Set_Tribe(tribe: TribeType)
}

class Creature_Card {
  - Base_DMG : int
  - Weapon_multiplier : Float
  + Get_Weapon_multiplier() : Float
  + Set_Weapon_multiplier(mult: Float)
  + Get_Base_DMG() : int
  + Set_Base_DMG(dmg: int)
}

class Weapon_Card {
  - DMG_up : int
  + Get_DMG_up() : int
  + Set_DMG_up(dmg: int)
}

class Artifact_Card {
  - Multiplier : Float
  + Get_Multiplier() : Float
  + Set_Multiplier(mult: Float)
}

class Shield_Card {
  - Usage : int
  + Get_Usage() : int
  + Set_Usage(usage: int)
}

class Buff_Card {
  - Buff_amount : Float
  + Get_Buff_amount() : Float
  + Set_Buff_amount(amount: Float)
}

'#############################################
' Player and Hand classes
'#############################################

class Hand {
  - amount : int
  - cards : vector<unique_ptr<Card>>
  + add_card(unique_ptr<Card>)
  + remove_card(index: int)
  + get_card(index: int) : Card&
  + sort_by_mana()
  + generate(id: int)
  + get_amount() : int
  + get_unique_card_types() : vector<string>
  + get_cards_by_type(type_name: string&) : vector<reference_wrapper<Card>>
}

class Player {
  - hp : int
  - mana : int
  - armor : int
  - PHand : Hand
  - name : String
  - Character : Character
  - Shield_amount : int
  + Show_Hand()
  + Eat_card(index: int)
  + Use_card(target: Player, index: int)
  + Take_damage(amount: int)
  + Throw_out(index: int)
  + Get_Hp() : int
  + Set_Hp(value: int)
  + Get_Mana() : int
  + Set_Mana(value: int)
  + Get_Armor() : int
  + Set_Armor(value: int)
  + Get_Name() : String
  + Set_Name(name: String)
  + Get_Character() : Character
  + Set_Character(character: Character)
}

class AI_Player {
  + count_best() : int
}

class Human_Player_Player {
  + Write_info()
}

'#############################################
' Character Classes
'#############################################

class Character {
  - xp : int
  - name : String
  - Heal_MLTPL : Float
  - Dmg_MLTPL : Float
  - Armor_MLTPL : Float
  - description : String
  - xp_to_next_lvl : int
  - lvl : int
  + lvl_up()
  + Get_Xp() : int
  + Set_Xp(value: int)
  + Get_Name() : String
  + Set_Name(name: String)
  + Get_Heal_Multiplier() : Float
  + Set_Heal_Multiplier(value: Float)
  + Get_Dmg_Multiplier() : Float
  + Set_Dmg_Multiplier(value: Float)
  + Get_Armor_Multiplier() : Float
  + Set_Armor_Multiplier(value: Float)
  + Get_Description() : String
  + Set_Description(desc: String)
  + Get_Xp_To_Next_Lvl() : int
  + Set_Xp_To_Next_Lvl(value: int)
  + Get_Level() : int
  + Set_Level(value: int)
  + add_xp(amount: int)
}

class Healer_Character {
  - Heal_amount : int
  + Heal()
  + Get_Heal_Amount() : int
  + Set_Heal_Amount(value: int)
}

class Tank_Character {
  - was_up : Boolean
  - Shield_amount : int
  + Get_Was_Up() : Boolean
  + Set_Was_Up(state: Boolean)
  + Get_Shield_Amount() : int
  + Set_Shield_Amount(value: int)
  + Shielding()
}

class Knight_Character {
  - armor_up_amount : int
  - was_armored : Boolean
  + Get_Was_Armored() : Boolean
  + Set_Was_Armored(state: Boolean)
  + Get_Armor_Up() : int
  + Set_Armor_Up(value: int)
  + Armoring()
}

'#############################################
' Inheritance
'#############################################

Spell_Card --|> Card
Attack_Spell_Card --|> Spell_Card
Heal_Spell_Card --|> Spell_Card
Buff_Spell_Card --|> Spell_Card
Defence_Spell_Card --|> Spell_Card
Beast_Card --|> Card
Creature_Card --|> Card
Weapon_Card --|> Card
Artifact_Card --|> Card
Shield_Card --|> Card
Buff_Card --|> Card

AI_Player --|> Player
Human_Player_Player --|> Player

Healer_Character --|> Character
Tank_Character --|> Character
Knight_Character --|> Character

'#############################################
' Associations
'#############################################

Player "1" *-- "1" Hand : PHand
Player "1" *-- "1" Character : Character
Hand "1" *-- "0..*" Card : Cards
@enduml