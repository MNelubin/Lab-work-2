@startuml
allowmixing


' Define components
component "Player Management" as PM {
  class Player
  class Hand
  class AI_player
  class Human_player
}

component "Character System" as CS {
  class Character
  class Healer_Character
  class Tank_Character
  class Knight_Character
}

component "Card System" as CardSys {
  class Card
  class Spell_Card
  class Attack_Spell_Card
  class Heal_Spell_Card
  class Buff_Spell_Card
  class Defence_Spell_Card
  class Beast_Card
  class Creature_Card
  class Weapon_Card
  class Artifact_Card
  class Shield_Card
  class Buff_Card
}

component "Testing" as Test {
  component "Data Validation" as DataVal
  component "Gameplay Testing" as GameplayTest
}

component "Gameplay" as GP {
}

component "Game Saving" as Save {
}

' Define relationships
PM --> GP : Manages
PM --> CardSys : Uses cards
PM --> CS : Linked to
DataVal --> PM : Validates player data
DataVal --> CS : Validates character data
DataVal --> CardSys : Validates card data
GameplayTest --> GP : Tests
GameplayTest --> PM : Tests player interactions
GameplayTest --> CardSys : Tests card effects
Save --> CS : Saves/loads character data

' Add notes
note bottom of PM
Manages player data (health, mana) and card actions via Hand.
end note

note bottom of CS
Defines character types and their unique abilities.
end note

note bottom of CardSys
Creates cards and manages their effects.
end note

note left of Test
Contains testing components:
- Data Validation
- Gameplay Testing
end note

note right of GP
Represents the overall gameplay logic and interactions in the game.
end note

note right of Save
Saves character data to files and loads it based on the player's name.
end note
@enduml